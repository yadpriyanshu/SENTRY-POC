---
apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  name: "sentry"
  namespace: "default"
  labels:
    app: "sentry"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "sentry"
  template:
    metadata:
      labels:
        app: "sentry"
    spec:
      containers:
      - name: "sentry"
        image: "gcr.io/PROJECT_ID/sentry:latest"
        ports:
        - containerPort: 9000
        command: ["/bin/sh","-c","sentry upgrade --noinput && sentry run web"]
        env:
        - name: SENTRY_REDIS_HOST
          value: "localhost"
        - name: SENTRY_SECRET_KEY
          value: "j44@64jw0oi_smeool!(r%6)c%5bb1m5==j^-n1#hi4f-v2i53"
        - name: SENTRY_POSTGRES_HOST
          value: "localhost"
        - name: SENTRY_TAG
          value: "8.10.0"

      - name: "redis"
        image: "gcr.io/PROJECT_ID/redis:latest"
        ports:
        - containerPort: 6379

      - name: "postgres"
        image: "gcr.io/PROJECT_ID/postgres:latest"
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_USER
          value: "sentry"
        - name: POSTGRES_PASSWORD
          value: "sentry"


---
apiVersion: "autoscaling/v2beta1"
kind: "HorizontalPodAutoscaler"
metadata:
  name: "sentry-hpa-h2wr"
  namespace: "default"
  labels:
    app: "sentry"
spec:
  scaleTargetRef:
    kind: "Deployment"
    name: "sentry"
    apiVersion: "apps/v1"
  minReplicas: 1
  maxReplicas: 5
  metrics:
  - type: "Resource"
    resource:
      name: "cpu"
      targetAverageUtilization: 80

---
apiVersion: "v1"
kind: "Service"
metadata:
  name: "sentry-service"
  namespace: "default"
  labels:
    app: "sentry"
spec:
  ports:
  - protocol: "TCP"
    port: 80
    targetPort: 9000
  selector:
    app: "sentry"
  type: "LoadBalancer"
  loadBalancerIP: ""